;; Loads utility test functions
(load "./common.lsp" )

(defun TEST-DFS ()
  (EXPECT (DFS '( ( a b ) c ) ) '( c b a ) ) 
  (EXPECT (DFS '( ( a b ) (c d) ) ) '( d c b a ) )
  (EXPECT (DFS '( c ) ) '( c ) ) 
  (EXPECT (DFS '( ( a ( b ) ) c ( d ) ) ) '( d c b a ) )
  (EXPECT (DFS '( A B C D E ) ) '(E D C B A ) )
  )
(defun TEST-DFID ()
  (EXPECT (DFID '((A (B)) C (D)) 3 ) '(C D C A D C B A) )
  (EXPECT (DFID '(A B C D E ) 1 ) '(E D C B A ) )
  (EXPECT (DFID '( ( A B ) C ( D E ) ) 2 ) '( C E D C B A ) )
  (EXPECT (DFID '(A (B C) (D) (E (F G))) 3) '( A E D C B A G F E D C B A ) )
  )
(defun TEST-FINAL-STATE ()
  (EXPECT (FINAL-STATE '(2 2 NIL ) ) NIL )
  (EXPECT (FINAL-STATE '(3 3 NIL ) ) T )
  (EXPECT (FINAL-STATE '(4 5 7 ) ) NIL )
  (EXPECT (FINAL-STATE '( ( 3 ) ( 3 ) ( NIL ) ) ) NIL )
  (EXPECT (FINAL-STATE '(3 3 ( NIL ) ) ) NIL )
  )
(defun TEST-NEXT-STATE ()
  (EXPECT (NEXT-STATE '( 1 1 T ) 1 1 ) '( (3 3 NIL ) ) )
  (EXPECT (NEXT-STATE '( 2 2 T ) 1 1 ) '( (2 2 NIL ) ) )
  (EXPECT (NEXT-STATE '( 3 3 T ) 1 1 ) '( (1 1 NIL ) ) )
  (EXPECT (NEXT-STATE '( 3 3 T ) 0 2 ) '( (0 2 NIL ) ) )
  (EXPECT (NEXT-STATE '( 3 3 NIL ) 0 2 ) '( (0 2 T ) ) )
  (EXPECT (NEXT-STATE '( 3 0 T ) 2 0 ) NIL )
  (EXPECT (NEXT-STATE '( 3 0 T ) 5 0 ) NIL )
  (EXPECT (NEXT-STATE '( 3 0 T ) 5 0 ) NIL )
  (EXPECT (NEXT-STATE '( 3 3 T ) 0 1 ) '( ( 0 1 NIL ) ) )
  )
(defun TEST-SUCC-FN ()
  (EXPECT (succ-fn '(2 2 NIL ) ) '( ( 3 1 T )
				    ( 2 2 T )
				    ) )
  (EXPECT (succ-fn '( 3 3 T ) ) '( ( 0 1 NIL ) ( 0 2 NIL ) ( 1 1 NIL ) ) )
  (EXPECT (succ-fn '( 1 1 T ) ) '( ( 3 2 NIL ) ( 3 3 NIL ) ) )
  )
(defun TEST-ON-PATH ()
  (EXPECT (on-path '( 3 0 T ) '( (1 0 T ) ( 3 0 T ) ) ) T )
  (EXPECT (on-path '( 3 0 T ) '( ( 3 0 T ) ) ) T )
  (EXPECT (on-path '( 3 0 T ) '( ( 2 0 T ) ) ) NIL ) 
  (EXPECT (on-path '( 3 0 T ) '( ) ) NIL )
)
(defun TEST-MULT-DFS ()
  )
(defun TEST-MC-DFS ()  )


(defun TEST-HW2 ()
  (TEST-DFS )
  (TEST-DFID )
  (TEST-FINAL-STATE )
  (TEST-NEXT-STATE )
  (TEST-SUCC-FN )
   )
